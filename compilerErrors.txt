parson.checked.c:396:12: warning: cannot prove argument meets declared bounds for 1st parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(temp_names, object->names, object->count * sizeof(_Ptr<char>));
           ^~~~~~~~~~
parson.checked.c:396:12: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)temp_names, (_Array_ptr<char>)temp_names + object->count * sizeof(_Ptr<char>))'
parson.checked.c:396:12: note: (expanded) inferred bounds are 'bounds(temp_names, temp_names + new_capacity)'
    memcpy(temp_names, object->names, object->count * sizeof(_Ptr<char>));
           ^~~~~~~~~~
parson.checked.c:396:24: warning: cannot prove argument meets declared bounds for 2nd parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(temp_names, object->names, object->count * sizeof(_Ptr<char>));
                       ^~~~~~~~~~~~~
parson.checked.c:396:24: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)object->names, (_Array_ptr<char>)object->names + object->count * sizeof(_Ptr<char>))'
parson.checked.c:396:24: note: (expanded) inferred bounds are 'bounds(object->names, object->names + object->capacity)'
    memcpy(temp_names, object->names, object->count * sizeof(_Ptr<char>));
                       ^~~~~~~~~~~~~
parson.checked.c:397:12: warning: cannot prove argument meets declared bounds for 1st parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(temp_values, object->values, object->count * sizeof(_Ptr<JSON_Value>));
           ^~~~~~~~~~~
parson.checked.c:397:12: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)temp_values, (_Array_ptr<char>)temp_values + object->count * sizeof(_Ptr<JSON_Value>))'
parson.checked.c:397:12: note: (expanded) inferred bounds are 'bounds(temp_values, temp_values + new_capacity)'
    memcpy(temp_values, object->values, object->count * sizeof(_Ptr<JSON_Value>));
           ^~~~~~~~~~~
parson.checked.c:397:25: warning: cannot prove argument meets declared bounds for 2nd parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(temp_values, object->values, object->count * sizeof(_Ptr<JSON_Value>));
                        ^~~~~~~~~~~~~~
parson.checked.c:397:25: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)object->values, (_Array_ptr<char>)object->values + object->count * sizeof(_Ptr<JSON_Value>))'
parson.checked.c:397:25: note: (expanded) inferred bounds are 'bounds(object->values, object->values + object->capacity)'
    memcpy(temp_values, object->values, object->count * sizeof(_Ptr<JSON_Value>));
                        ^~~~~~~~~~~~~~
parson.checked.c:476:12: warning: cannot prove argument meets declared bounds for 1st parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(new_items, array->items, array->count * sizeof(_Ptr<JSON_Value>));
           ^~~~~~~~~
parson.checked.c:476:12: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)new_items, (_Array_ptr<char>)new_items + array->count * sizeof(_Ptr<JSON_Value>))'
parson.checked.c:476:12: note: (expanded) inferred bounds are 'bounds(new_items, new_items + new_capacity)'
    memcpy(new_items, array->items, array->count * sizeof(_Ptr<JSON_Value>));
           ^~~~~~~~~
parson.checked.c:476:23: warning: cannot prove argument meets declared bounds for 2nd parameter [-Wcheck-bounds-decls-unchecked-scope]
    memcpy(new_items, array->items, array->count * sizeof(_Ptr<JSON_Value>));
                      ^~~~~~~~~~~~
parson.checked.c:476:23: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)array->items, (_Array_ptr<char>)array->items + array->count * sizeof(_Ptr<JSON_Value>))'
parson.checked.c:476:23: note: (expanded) inferred bounds are 'bounds(array->items, array->items + array->capacity)'
    memcpy(new_items, array->items, array->count * sizeof(_Ptr<JSON_Value>));
                      ^~~~~~~~~~~~
parson.checked.c:1567:11: warning: cannot prove argument meets declared bounds for 1st parameter [-Wcheck-bounds-decls-unchecked-scope]
  memmove(array->items + ix, array->items + ix + 1, to_move_bytes);
          ^~~~~~~~~~~~~~~~~
parson.checked.c:1567:11: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)array->items + ix, (_Array_ptr<char>)array->items + ix + to_move_bytes)'
parson.checked.c:1567:11: note: (expanded) inferred bounds are 'bounds(array->items, array->items + array->capacity)'
  memmove(array->items + ix, array->items + ix + 1, to_move_bytes);
          ^~~~~~~~~~~~~~~~~
parson.checked.c:1567:30: warning: cannot prove argument meets declared bounds for 2nd parameter [-Wcheck-bounds-decls-unchecked-scope]
  memmove(array->items + ix, array->items + ix + 1, to_move_bytes);
                             ^~~~~~~~~~~~~~~~~~~~~
parson.checked.c:1567:30: note: (expanded) expected argument bounds are 'bounds((_Array_ptr<char>)array->items + ix + 1, (_Array_ptr<char>)array->items + ix + 1 + to_move_bytes)'
parson.checked.c:1567:30: note: (expanded) inferred bounds are 'bounds(array->items, array->items + array->capacity)'
  memmove(array->items + ix, array->items + ix + 1, to_move_bytes);
                             ^~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
